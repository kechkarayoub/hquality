// Mocks generated by Mockito 5.4.4 from annotations
// in hquality/test/utils/utils_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter/material.dart' as _i2;
import 'package:hquality/storage/storage.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueNotifier_0<T> extends _i1.SmartFake
    implements _i2.ValueNotifier<T> {
  _FakeValueNotifier_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i3.StorageService {
  @override
  _i2.ValueNotifier<dynamic> get storageNotifier => (super.noSuchMethod(
        Invocation.getter(#storageNotifier),
        returnValue: _FakeValueNotifier_0<dynamic>(
          this,
          Invocation.getter(#storageNotifier),
        ),
        returnValueForMissingStub: _FakeValueNotifier_0<dynamic>(
          this,
          Invocation.getter(#storageNotifier),
        ),
      ) as _i2.ValueNotifier<dynamic>);

  @override
  _i4.Future<void> clear({bool? updateNotifier = true}) => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
          {#updateNotifier: updateNotifier},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  dynamic get(String? key) => super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void remove({
    required String? key,
    bool? updateNotifier = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #remove,
          [],
          {
            #key: key,
            #updateNotifier: updateNotifier,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void set({
    required String? key,
    required dynamic obj,
    bool? updateNotifier = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #set,
          [],
          {
            #key: key,
            #obj: obj,
            #updateNotifier: updateNotifier,
          },
        ),
        returnValueForMissingStub: null,
      );
}
